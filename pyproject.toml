[build-system]
requires = ["setuptools>=75.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "osdu-mcp-server"
version = "0.8.0"
description = "MCP server for OSDU platform integration"
readme = "README.md"
requires-python = ">=3.12"
license = {file = "LICENSE"}
authors = [{name = "OSDU MCP Server Contributors"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "mcp>=1.17.0",
    "aiohttp>=3.13.0",
    "pyyaml>=6.0.3",
    "pydantic>=2.12.0",
    "azure-identity==1.25.1",
    "azure-core==1.35.1",
    "boto3>=1.40.50",
    "google-auth>=2.41.1",
    "PyJWT>=2.10.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "black>=24.10.0",
    "ruff>=0.9.7",
    "mypy>=1.14.2",
    "freezegun>=1.5.1",
    "pytest-cov>=6.1.1",
    "flake8>=7.2.0",
    "mypy>=1.15.0",
    "aioresponses>=0.7.8"
]

[project.scripts]
osdu-mcp-server = "osdu_mcp_server.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
osdu_mcp_server = [
    "py.typed",
    "resources/**/*.json",
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "T20",  # flake8-print
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "B904",  # allow raise without from in except
    "SIM117", # allow nested with statements for readability
    "B011",  # allow assert False in tests
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mcp.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore:Field name.*shadows an attribute in parent.*:UserWarning:pydantic._internal._fields"
]

[tool.coverage.run]
branch = true
source = ["osdu_mcp_server"]
omit = ["*/main.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.flake8]
ignore = ["E127"]